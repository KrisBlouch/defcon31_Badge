 /*********
 Kris Blouch
 Code for running an oled, 2 buttons, and tilt switch to generate dice rolls
*********/
//libraries
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
//buttons
#define LED_PIN 12
#define TILT_HOT 3
#define TILT_INPUT_PIN 10
#define BUTTON_INPUT 5
#define BUTTON2_INPUT 7
//var
int DICE_COUNT = 0;
int myPins[] = {4,6,8,20};
int PRESS_LEN_MILLI = 0;


//screen stuff
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

//variables
int dice20 = 0;
int dice4 = 0;
int dice6 = 0;
int dice8 = 0;
int funct1 = 0;


//string diceSpace = "  ";

//functions

void D20();

void setup() {
  pinMode(LED_PIN, OUTPUT);
  pinMode(TILT_INPUT_PIN, INPUT);
  pinMode(TILT_HOT, OUTPUT);
  pinMode(BUTTON_INPUT, INPUT);
  pinMode(BUTTON2_INPUT, INPUT);
  digitalWrite(TILT_HOT, HIGH);
  Serial.begin(9600);
  //Serial.begin(115200);

  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3D for 128x64
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  //delay(2000);
  display.clearDisplay();
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  // Display static text
  //dice20 = random(1,20);
  display.println(" Webflow! ");
  display.setTextSize(3);
  display.println("PUSH    BUTTON");
  display.display();
  delay(3000);

}

void loop() {
  
  while(true) {
    if(digitalRead(BUTTON_INPUT) == HIGH) {
      break;
    }
  }
  
  
  while(digitalRead(BUTTON_INPUT) == HIGH) {
    delay(100);
    PRESS_LEN_MILLI = PRESS_LEN_MILLI + 100;
  }

  if(PRESS_LEN_MILLI > 100); {
    DICE_COUNT = DICE_COUNT + 1;
    pickD20();
  }
  while(true) {
    if(digitalRead(TILT_INPUT_PIN) == 0) {
      rollD20();
    }
    if(digitalRead(BUTTON_INPUT) == HIGH) {
      break;
    }

  }  
while(digitalRead(BUTTON_INPUT) == HIGH) {
    delay(100);
    PRESS_LEN_MILLI = PRESS_LEN_MILLI + 100;
  }

  if(PRESS_LEN_MILLI > 100); {
    DICE_COUNT = DICE_COUNT + 1;
    pickD4();
  }
  while(true) {
    if(digitalRead(TILT_INPUT_PIN) == 0) {
      rollD4();
    }
    if(digitalRead(BUTTON_INPUT) == HIGH) {
      break;
    }

  }    
while(digitalRead(BUTTON_INPUT) == HIGH) {
    delay(100);
    PRESS_LEN_MILLI = PRESS_LEN_MILLI + 100;
  }

  if(PRESS_LEN_MILLI > 100); {
    DICE_COUNT = DICE_COUNT + 1;
    pickD6();
  }
  while(true) {
    if(digitalRead(TILT_INPUT_PIN) == 0) {
      rollD6();
    }
    if(digitalRead(BUTTON_INPUT) == HIGH) {
      break;
    }

  }  
while(digitalRead(BUTTON_INPUT) == HIGH) {
    delay(100);
    PRESS_LEN_MILLI = PRESS_LEN_MILLI + 100;
  }

  if(PRESS_LEN_MILLI > 100); {
    DICE_COUNT = DICE_COUNT + 1;
    pickD8();
  }
  while(true) {
    if(digitalRead(TILT_INPUT_PIN) == 0) {
      rollD8();
    }
    if(digitalRead(BUTTON_INPUT) == HIGH) {
      break;
    }

  }  
}



  

  //if(digitalRead(BUTTON_PIN) == HIGH && digitalRead(BUTTON2_PIN) == HIGH)
    //break;
      //pickD4();
  
      

//functions:
  void rollD20(){
    dice20 = random(1,20);
    display.clearDisplay();
    display.setTextSize(6);
    display.setTextColor(WHITE);
    display.setCursor(0, 16);
  // Display static text
    dice20 = random(1,20);
    //diceSpace = "  ";
    display.print(" ");
    display.println(dice20);
    display.display(); 
    Serial.println(dice20);
    delay(3000);
  }

    void rollD6(){
    dice6 = random(1,6);
    display.clearDisplay();
    display.setTextSize(6);
    display.setTextColor(WHITE);
    display.setCursor(0, 16);
  // Display static text
    //diceSpace = "  ";
    display.print(" ");
    display.println(dice6);
    display.display(); 
    Serial.println(dice6);
    delay(3000);
  }

  
    void rollD4(){
    dice6 = random(1,4);
    display.clearDisplay();
    display.setTextSize(6);
    display.setTextColor(WHITE);
    display.setCursor(0, 16);
  // Display static text
    //diceSpace = "  ";
    display.print(" ");
    display.println(dice4);
    display.display(); 
    Serial.println(dice4);
    delay(3000);
  }

  
    void rollD8(){
    dice6 = random(1,6);
    display.clearDisplay();
    display.setTextSize(6);
    display.setTextColor(WHITE);
    display.setCursor(0, 16);
  // Display static text
    //diceSpace = "  ";
    display.print(" ");
    display.println(dice8);
    display.display(); 
    Serial.println(dice8);
    delay(3000);
  }

  //selectDiceFunctions

  void pickD20(){
    display.clearDisplay();
    display.setTextSize(2);
    display.setTextColor(WHITE);
    display.setCursor(0,0);
    display.println(" Pick Die");
    display.setCursor(0, 16);
  // Display next Line
    display.setTextSize(5);
    display.println("D20");
    display.display(); 
  }

    void pickD4(){
    display.clearDisplay();
    display.setTextSize(2);
    display.setTextColor(WHITE);
    display.setCursor(0,0);
    display.println(" Pick Die");
    display.setCursor(0, 16);
  // Display next Line
    display.setTextSize(5);
    display.println("D4");
    display.display(); 
  }

    void pickD6(){
    display.clearDisplay();
    display.setTextSize(2);
    display.setTextColor(WHITE);
    display.setCursor(0,0);
    display.println(" Pick Die");
    display.setCursor(0, 16);
  // Display next Line
    display.setTextSize(5);
    display.println("D6");
    display.display(); 
  }

    void pickD8(){
    display.clearDisplay();
    display.setTextSize(2);
    display.setTextColor(WHITE);
    display.setCursor(0,0);
    display.println(" Pick Die");
    display.setCursor(0, 16);
  // Display next Line
    display.setTextSize(5);
    display.println("D8");
    display.display(); 
  }


